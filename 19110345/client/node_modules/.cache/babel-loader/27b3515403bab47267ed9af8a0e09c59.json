{"ast":null,"code":"// src/index.ts\nimport { getActiveElement, getAllFocusable, isTabbable } from \"@chakra-ui/dom-utils\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallback } from \"react\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus();\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocus = shouldFocus && visible;\n  const onFocus = useCallback(() => {\n    if (!element || !autoFocus) return;\n    if (element.contains(document.activeElement)) return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({\n            preventScroll\n          });\n        });\n      }\n    }\n  }, [autoFocus, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nexport { useFocusOnHide, useFocusOnShow };","map":{"version":3,"names":["getActiveElement","getAllFocusable","isTabbable","useEventListener","useUpdateEffect","useCallback","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","options","shouldFocus","shouldFocusProp","visible","focusRef","requestAnimationFrame","focus","defaultOptions","preventScroll","useFocusOnShow","target","element","isRefObject","autoFocus","onFocus","document","_a","tabbableEls","length","val"],"sources":["C:/Users/hieud/OneDrive/Máy tính/cnpmm/cnmmweek6/19110345/client/node_modules/@chakra-ui/react-use-focus-effect/dist/index.esm.js"],"sourcesContent":["// src/index.ts\r\nimport {\r\n  getActiveElement,\r\n  getAllFocusable,\r\n  isTabbable\r\n} from \"@chakra-ui/dom-utils\";\r\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\r\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\r\nimport { useCallback } from \"react\";\r\nfunction preventReturnFocus(containerRef) {\r\n  const el = containerRef.current;\r\n  if (!el)\r\n    return false;\r\n  const activeElement = getActiveElement(el);\r\n  if (!activeElement)\r\n    return false;\r\n  if (el.contains(activeElement))\r\n    return false;\r\n  if (isTabbable(activeElement))\r\n    return true;\r\n  return false;\r\n}\r\nfunction useFocusOnHide(containerRef, options) {\r\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\r\n  const shouldFocus = shouldFocusProp && !visible;\r\n  useUpdateEffect(() => {\r\n    if (!shouldFocus)\r\n      return;\r\n    if (preventReturnFocus(containerRef)) {\r\n      return;\r\n    }\r\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\r\n    if (el) {\r\n      requestAnimationFrame(() => {\r\n        el.focus();\r\n      });\r\n    }\r\n  }, [shouldFocus, containerRef, focusRef]);\r\n}\r\nvar defaultOptions = {\r\n  preventScroll: true,\r\n  shouldFocus: false\r\n};\r\nfunction useFocusOnShow(target, options = defaultOptions) {\r\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\r\n  const element = isRefObject(target) ? target.current : target;\r\n  const autoFocus = shouldFocus && visible;\r\n  const onFocus = useCallback(() => {\r\n    if (!element || !autoFocus)\r\n      return;\r\n    if (element.contains(document.activeElement))\r\n      return;\r\n    if (focusRef == null ? void 0 : focusRef.current) {\r\n      requestAnimationFrame(() => {\r\n        var _a;\r\n        (_a = focusRef.current) == null ? void 0 : _a.focus({ preventScroll });\r\n      });\r\n    } else {\r\n      const tabbableEls = getAllFocusable(element);\r\n      if (tabbableEls.length > 0) {\r\n        requestAnimationFrame(() => {\r\n          tabbableEls[0].focus({ preventScroll });\r\n        });\r\n      }\r\n    }\r\n  }, [autoFocus, preventScroll, element, focusRef]);\r\n  useUpdateEffect(() => {\r\n    onFocus();\r\n  }, [onFocus]);\r\n  useEventListener(element, \"transitionend\", onFocus);\r\n}\r\nfunction isRefObject(val) {\r\n  return \"current\" in val;\r\n}\r\nexport {\r\n  useFocusOnHide,\r\n  useFocusOnShow\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}