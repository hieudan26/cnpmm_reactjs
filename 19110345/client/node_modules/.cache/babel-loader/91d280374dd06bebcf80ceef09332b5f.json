{"ast":null,"code":"import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { isNum } from './inc.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return v => mix(origin, target, v);\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\nconst mixArray = (from, to) => {\n  const output = [...from];\n  const numValues = output.length;\n  const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n  return v => {\n    for (let i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n    return output;\n  };\n};\nconst mixObject = (origin, target) => {\n  const output = Object.assign(Object.assign({}, origin), target);\n  const blendValue = {};\n  for (const key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n  return v => {\n    for (const key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n    return output;\n  };\n};\nfunction analyse(value) {\n  const parsed = complex.parse(value);\n  const numValues = parsed.length;\n  let numNumbers = 0;\n  let numRGB = 0;\n  let numHSL = 0;\n  for (let i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === \"number\") {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n  return {\n    parsed,\n    numNumbers,\n    numRGB,\n    numHSL\n  };\n}\nconst mixComplex = (origin, target) => {\n  const template = complex.createTransformer(target);\n  const originStats = analyse(origin);\n  const targetStats = analyse(target);\n  const canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;\n  if (canInterpolate) {\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n  } else {\n    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n    return p => `${p > 0 ? target : origin}`;\n  }\n};\nexport { mixArray, mixComplex, mixObject };","map":{"version":3,"names":["complex","color","mix","mixColor","isNum","pipe","warning","getMixer","origin","target","v","test","mixComplex","mixArray","from","to","output","numValues","length","blendValue","map","fromThis","i","mixObject","Object","assign","key","undefined","analyse","value","parsed","parse","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","canInterpolate","p"],"sources":["C:/Users/hieud/OneDrive/Máy tính/cnpmm/cnmmweek6/19110345/client/node_modules/popmotion/dist/es/utils/mix-complex.mjs"],"sourcesContent":["import { complex, color } from 'style-value-types';\r\nimport { mix } from './mix.mjs';\r\nimport { mixColor } from './mix-color.mjs';\r\nimport { isNum } from './inc.mjs';\r\nimport { pipe } from './pipe.mjs';\r\nimport { warning } from 'hey-listen';\r\n\r\nfunction getMixer(origin, target) {\r\n    if (isNum(origin)) {\r\n        return (v) => mix(origin, target, v);\r\n    }\r\n    else if (color.test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return mixComplex(origin, target);\r\n    }\r\n}\r\nconst mixArray = (from, to) => {\r\n    const output = [...from];\r\n    const numValues = output.length;\r\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\r\n    return (v) => {\r\n        for (let i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nconst mixObject = (origin, target) => {\r\n    const output = Object.assign(Object.assign({}, origin), target);\r\n    const blendValue = {};\r\n    for (const key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return (v) => {\r\n        for (const key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nfunction analyse(value) {\r\n    const parsed = complex.parse(value);\r\n    const numValues = parsed.length;\r\n    let numNumbers = 0;\r\n    let numRGB = 0;\r\n    let numHSL = 0;\r\n    for (let i = 0; i < numValues; i++) {\r\n        if (numNumbers || typeof parsed[i] === \"number\") {\r\n            numNumbers++;\r\n        }\r\n        else {\r\n            if (parsed[i].hue !== undefined) {\r\n                numHSL++;\r\n            }\r\n            else {\r\n                numRGB++;\r\n            }\r\n        }\r\n    }\r\n    return { parsed, numNumbers, numRGB, numHSL };\r\n}\r\nconst mixComplex = (origin, target) => {\r\n    const template = complex.createTransformer(target);\r\n    const originStats = analyse(origin);\r\n    const targetStats = analyse(target);\r\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\r\n        originStats.numRGB === targetStats.numRGB &&\r\n        originStats.numNumbers >= targetStats.numNumbers;\r\n    if (canInterpolate) {\r\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\r\n    }\r\n    else {\r\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\r\n        return (p) => `${p > 0 ? target : origin}`;\r\n    }\r\n};\r\n\r\nexport { mixArray, mixComplex, mixObject };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}